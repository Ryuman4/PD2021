- name: Install dbserver
  hosts: dbservers
  become: true

  tasks:
    - name: Install aptitude using apt
      apt: name=curl state=latest update_cache=yes force_apt_get=yes

    - name: Install python pip
      yum:
        name: python-pip
        state: present

    - name: Install docker
      yum:
        name: docker
        state: present

    - name: start docker
      service:
        name: docker
        state: started
        enabled: yes
        
    - name: Install docker-py python module
      pip:
        name: docker-py
        state: present

    - name: Create postgres container
      ansible.builtin.docker_container:
        name: postgres_vstore_ci
        image: "{{ DB_IMAGE }}"
        state: started
        detach: yes
        recreate: yes
        restart_policy: on-failure
        ports:
          - "5432:5432"
        network_mode: bridge
        keep_volumes: yes
        env:
          POSTGRES_USER: "admin"
          POSTGRES_PASSWORD: "admin"


- name: Install webserver
  hosts: webservers
  become: true

  tasks:
    #- name: Install aptitude using apt
    #  apt: name=curl state=latest update_cache=yes force_apt_get=yes

    #- name: Install required system packages
    #  shell: curl -sSL https://get.docker.com/ | sh 
    #  register: result

    #- debug:
    #   var=result

    #- name: Add group docker to user guest
    #  user:
    #    name: guest
    #    groups: docker
    #    append: yes

    - name: Create app container container
      ansible.builtin.docker_container:
        name: vstore_ci
        image: "{{ WEB_IMAGE }}"
        state: started
        detach: yes
        recreate: yes
        restart_policy: on-failure
        ports:
          - "9000:8080"
        network_mode: bridge
        env:
          SPRING_DATASOURCE_URL: "jdbc:postgresql://172.17.0.1:5432/stock_db"