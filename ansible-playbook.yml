- name: Install dbserver
  hosts: dbservers
  become: true
  gather_facts: true

  tasks:
    - name: Install aptitude using apt
      apt: name=aptitude state=latest update_cache=yes force_apt_get=yes

    - name: Install required system packages
      apt: name={{ item }} state=latest update_cache=yes
      loop: [ 'apt-transport-https', 'ca-certificates', 'curl', 'software-properties-common', 'python3-pip', 'virtualenv', 'python3-setuptools']

    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu bionic stable
        state: present

    - name: Install docker
      yum:
        name: docker
        state: present

    - name: start docker
      service:
        name: docker
        state: started
        enabled: yes
        
    - name: Install docker-py python module
      pip:
        name: docker-py
        state: present

    - name: Create postgres container
      ansible.builtin.docker_container:
        name: postgres_vstore_ci
        image: "{{ DB_IMAGE }}"
        state: started
        detach: yes
        recreate: yes
        restart_policy: on-failure
        ports:
          - "5432:5432"
        network_mode: bridge
        keep_volumes: yes
        volumes:
          - /postgres_vstore_db:/var/lib/postgresql/data
        env:
          POSTGRES_USER: "admin"
          POSTGRES_PASSWORD: "admin"


- name: Install webserver
  hosts: webservers
  become: true

  tasks:
    - name: Install aptitude using apt
      apt: name=aptitude state=latest update_cache=yes force_apt_get=yes

    - name: Install required system packages
      apt: name={{ item }} state=latest update_cache=yes
      loop: [ 'apt-transport-https', 'ca-certificates', 'curl', 'software-properties-common', 'python3-pip', 'virtualenv', 'python3-setuptools']

    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu bionic stable
        state: present

    - name: Install docker
      yum:
        name: docker
        state: present

    - name: start docker
      service:
        name: docker
        state: started
        enabled: yes
        
    - name: Install docker-py python module
      pip:
        name: docker-py
        state: present

    - name: Create app container container
      ansible.builtin.docker_container:
        name: vstore_ci
        image: "{{ WEB_IMAGE }}"
        state: started
        detach: yes
        recreate: yes
        restart_policy: on-failure
        ports:
          - "9000:8080"
        network_mode: bridge
        keep_volumes: yes
        volumes:
          - /vstore_ci_tmp:/tmp
        env:
          SPRING_DATASOURCE_URL: "{{ db_conn_string }}"